<template>
    <div :class='state'>
        <div class='tmpl-task'>
            <h3>{{task.taskname}}</h3>
               <p style='display:none'>
                   {{task.name}} 
                   CONFIG ID{{configid}}
                   任务ID{{task._id}}
                   PUSHID {{item._id}}
               </p>
                <div v-if='info'>
                    <p><Icon type="clock">start</Icon>  {{ info.start_time }}</p>
                    <p><Icon type="clock">end</Icon> {{ info.end_time }}</p>
                    <p><Icon type="stats-bars"></Icon> {{ info.status }}</p>
                </div>
                <div v-if='!info'>
                   <i-button type="success" shape="circle" @click='build(item._id, task._id, configid)'> 执行 </i-button>
               </div>
        </div>
    </div>
</template>
<style lang='less'>
    .autoflex .flex.build{
       border-image: url('./progress-bar.gif') 2 2 round; 
        &:hover{
            &:before {
                background: #f90;
            }
        }
        &:before {
            background: #ffb103;
        }
    }
    .autoflex .flex.unstart{
        border-bottom-color:#ccc;
        &:hover{
            border-bottom: 3px solid #999;
            &:before {
                background: #999;
            }
        }
        &:before {
            background: #ccc;
        }
    }
    .autoflex .flex.error{
        border-bottom-color:#bd4747;
        &:hover{
            border-bottom: 3px solid #f00;
            &:before {
                background: #f00;
            }
        }
        &:before {
            background: #bd4747;
        }
    }
</style>
<script type='text/javascript'>
    import axios  from '../static/lib/ajax/axios.js';
    export default{
        data(){
            return {
                task: {},
                item: {},
                configid: '',
                info: false,
                state: ''
            }
        },
        props: ['task', 'item', 'configid'],
        watch:{ },
        created(){
            let detail = this.item.buildGroup[this.task._id]
            let info = detail && detail[detail.length-1] || false;
            this.info = info &&  info.info.pop()  || false;
            this.state = this.info && this.info.status || '' ;
        },
        methods:{ 
            build(push_id, task_id, config_id){

                let {branch, path } = this.$route.params;
                axios.post('agile/build',{
                    config_id,
                    push_id,
                    task_id,
                    repository: this.item.project.git_http_url,
                    branch: branch
                }).then((response)=>{
                    console.log(response.data)
                });
            }
        },
        components: { }
    }
</script>
