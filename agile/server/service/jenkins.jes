/**
 * @file: index.jes
 * @author: shangwenhe@itv.baidu.com
 * @date: 2017-06-26
 * @description: this is a <jes> file
 */
/* eslint-disable */

import Curl from '../lib/curl';
import ModelJenkins from '../model/jenkins/';
import serviceBuild from './build';
import ServiceHook from './hook';
import async from 'async';

class ServiceJenkins extends ModelJenkins {
    constructor() {
        super();
        this.conf = {
            user: '--user shangwenhe:4d23faf3e4a6dbd1d61ad04e916ada4f',
        }
    }

    /** 
     * @desc 触发编译
     */
    trigger(params) {

        let body = {
            "parameter": [
                //   {"name": "cid", "value": config_id},
            ]
        };
        for (let key of Object.keys(params)) {
            body.parameter.push({
                "name": key,
                "value": params[key]
            });
        }

        super.findOne({
            _id: params.task_id
        }, (err, data) => {

            let urlencode = '--data-urlencode  json=\'' + JSON.stringify(body) + '\'';
            let curl = new Curl(this.conf.user, urlencode);
            curl.post(
                data.url + 'build',
                function(data) {
                    console.log(data)
                }
            );
        })
    }

    /** 
     * @desc 编译完成后触发
     */
    completed(data, callback) {
        async.waterfall([
            (callback) => {
                let curl = new Curl(this.conf.user);
                curl.get(data.url + 'api/json', (err, data) => {

                    let parameters = [].concat.apply([], data.actions.map(item => item.parameters)).filter(item => item);
                    let parameterObj = {};
                    parameters.map(function(item) {
                        parameterObj[item.name] = item.value;
                    });
                    callback(err, Object.assign(parameterObj, data, {
                        result: data.result
                    }))
                });

            }, (parameterObj, callback) => {
                // 更新编译结果
                serviceBuild.update({
                    _id: parameterObj['user_build_id']
                }, {
                    result: new Buffer(JSON.stringify(parameterObj)),
                    artifacts: parameterObj.artifacts,
                    task_status: parameterObj.result,
                    end_time: Date.now(),
                    url: parameterObj.url,
                    number: parameterObj.number,
                }, function(err){
                    callback(err, parameterObj.artifacts.map(function(item){
                        let tarUrl =  parameterObj.url + 'artifact/' + item.relativePath;
                        return Object.assign({}, item, { tarUrl })
                    }), parameterObj['push_id']);
                })
            },(artifacts, push_id, callback)=>{
                // 为hook更新数据
                ServiceHook.update({
                    _id: push_id
                }, {
                    $pushAll: {
                        artifacts  
                    }
                }, callback)
            }
        ], callback);
    }
    list(view, callback) {
        let curl = new Curl(this.conf.user);
        curl.get(
            'http://jenkins.xiaodutv.com/job/CodeCompilation/api/json\?depth\=0',
            callback
        );
    }
    fullname({
        url
    }, callback) {
        let curl = new Curl(this.conf.user);
        curl.get(
            url + 'api/json',
            callback
        );
    }
}

export
default new ServiceJenkins;
/* eslint-enable */
